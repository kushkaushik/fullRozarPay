{"ast":null,"code":"// src/use-clipboard.ts\nimport { useState, useCallback, useEffect } from \"react\";\nimport copy from \"copy-to-clipboard\";\nfunction useClipboard(value) {\n  let optionsOrTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const [hasCopied, setHasCopied] = useState(false);\n  const [valueState, setValueState] = useState(value);\n  useEffect(() => setValueState(value), [value]);\n  const {\n    timeout = 1500,\n    ...copyOptions\n  } = typeof optionsOrTimeout === \"number\" ? {\n    timeout: optionsOrTimeout\n  } : optionsOrTimeout;\n  const onCopy = useCallback(() => {\n    const didCopy = copy(valueState, copyOptions);\n    setHasCopied(didCopy);\n  }, [valueState, copyOptions]);\n  useEffect(() => {\n    let timeoutId = null;\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false);\n      }, timeout);\n    }\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied\n  };\n}\nexport { useClipboard };","map":{"version":3,"names":["useState","useCallback","useEffect","copy","useClipboard","value","optionsOrTimeout","arguments","length","undefined","hasCopied","setHasCopied","valueState","setValueState","timeout","copyOptions","onCopy","didCopy","timeoutId","window","setTimeout","clearTimeout","setValue"],"sources":["C:/Users/kushk_uzwykp1/OneDrive/Desktop/spotify_Node/MyFolder/fullRozarPay/frontened/node_modules/@chakra-ui/hooks/dist/chunk-RK6YFQX6.mjs"],"sourcesContent":["// src/use-clipboard.ts\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\nfunction useClipboard(value, optionsOrTimeout = {}) {\r\n  const [hasCopied, setHasCopied] = useState(false);\r\n  const [valueState, setValueState] = useState(value);\r\n  useEffect(() => setValueState(value), [value]);\r\n  const { timeout = 1500, ...copyOptions } = typeof optionsOrTimeout === \"number\" ? { timeout: optionsOrTimeout } : optionsOrTimeout;\r\n  const onCopy = useCallback(() => {\r\n    const didCopy = copy(valueState, copyOptions);\r\n    setHasCopied(didCopy);\r\n  }, [valueState, copyOptions]);\r\n  useEffect(() => {\r\n    let timeoutId = null;\r\n    if (hasCopied) {\r\n      timeoutId = window.setTimeout(() => {\r\n        setHasCopied(false);\r\n      }, timeout);\r\n    }\r\n    return () => {\r\n      if (timeoutId) {\r\n        window.clearTimeout(timeoutId);\r\n      }\r\n    };\r\n  }, [timeout, hasCopied]);\r\n  return {\r\n    value: valueState,\r\n    setValue: setValueState,\r\n    onCopy,\r\n    hasCopied\r\n  };\r\n}\r\n\r\nexport {\r\n  useClipboard\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,YAAYA,CAACC,KAAK,EAAyB;EAAA,IAAvBC,gBAAgB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACK,KAAK,CAAC;EACnDH,SAAS,CAAC,MAAMW,aAAa,CAACR,KAAK,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAC9C,MAAM;IAAES,OAAO,GAAG,IAAI;IAAE,GAAGC;EAAY,CAAC,GAAG,OAAOT,gBAAgB,KAAK,QAAQ,GAAG;IAAEQ,OAAO,EAAER;EAAiB,CAAC,GAAGA,gBAAgB;EAClI,MAAMU,MAAM,GAAGf,WAAW,CAAC,MAAM;IAC/B,MAAMgB,OAAO,GAAGd,IAAI,CAACS,UAAU,EAAEG,WAAW,CAAC;IAC7CJ,YAAY,CAACM,OAAO,CAAC;EACvB,CAAC,EAAE,CAACL,UAAU,EAAEG,WAAW,CAAC,CAAC;EAC7Bb,SAAS,CAAC,MAAM;IACd,IAAIgB,SAAS,GAAG,IAAI;IACpB,IAAIR,SAAS,EAAE;MACbQ,SAAS,GAAGC,MAAM,CAACC,UAAU,CAAC,MAAM;QAClCT,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,EAAEG,OAAO,CAAC;IACb;IACA,OAAO,MAAM;MACX,IAAII,SAAS,EAAE;QACbC,MAAM,CAACE,YAAY,CAACH,SAAS,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACJ,OAAO,EAAEJ,SAAS,CAAC,CAAC;EACxB,OAAO;IACLL,KAAK,EAAEO,UAAU;IACjBU,QAAQ,EAAET,aAAa;IACvBG,MAAM;IACNN;EACF,CAAC;AACH;AAEA,SACEN,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}