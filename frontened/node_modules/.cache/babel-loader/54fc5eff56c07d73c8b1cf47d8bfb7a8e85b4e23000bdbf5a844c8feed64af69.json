{"ast":null,"code":"import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\nconst frameloopDriver = update => {\n  const passTimestamp = _ref => {\n    let {\n      timestamp\n    } = _ref;\n    return update(timestamp);\n  };\n  return {\n    start: () => sync.update(passTimestamp, true),\n    stop: () => cancelSync.update(passTimestamp),\n    /**\r\n     * If we're processing this frame we can use the\r\n     * framelocked timestamp to keep things in sync.\r\n     */\n    now: () => frameData.isProcessing ? frameData.timestamp : performance.now()\n  };\n};\nexport { frameloopDriver };","map":{"version":3,"names":["sync","cancelSync","frameData","frameloopDriver","update","passTimestamp","_ref","timestamp","start","stop","now","isProcessing","performance"],"sources":["C:/Users/kushk_uzwykp1/OneDrive/Desktop/spotify_Node/MyFolder/fullRozarPay/frontened/node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs"],"sourcesContent":["import { sync, cancelSync } from '../../../frameloop/index.mjs';\r\nimport { frameData } from '../../../frameloop/data.mjs';\r\n\r\nconst frameloopDriver = (update) => {\r\n    const passTimestamp = ({ timestamp }) => update(timestamp);\r\n    return {\r\n        start: () => sync.update(passTimestamp, true),\r\n        stop: () => cancelSync.update(passTimestamp),\r\n        /**\r\n         * If we're processing this frame we can use the\r\n         * framelocked timestamp to keep things in sync.\r\n         */\r\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\r\n    };\r\n};\r\n\r\nexport { frameloopDriver };\r\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,UAAU,QAAQ,8BAA8B;AAC/D,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,MAAMC,eAAe,GAAIC,MAAM,IAAK;EAChC,MAAMC,aAAa,GAAGC,IAAA;IAAA,IAAC;MAAEC;IAAU,CAAC,GAAAD,IAAA;IAAA,OAAKF,MAAM,CAACG,SAAS,CAAC;EAAA;EAC1D,OAAO;IACHC,KAAK,EAAEA,CAAA,KAAMR,IAAI,CAACI,MAAM,CAACC,aAAa,EAAE,IAAI,CAAC;IAC7CI,IAAI,EAAEA,CAAA,KAAMR,UAAU,CAACG,MAAM,CAACC,aAAa,CAAC;IAC5C;AACR;AACA;AACA;IACQK,GAAG,EAAEA,CAAA,KAAMR,SAAS,CAACS,YAAY,GAAGT,SAAS,CAACK,SAAS,GAAGK,WAAW,CAACF,GAAG;EAC7E,CAAC;AACL,CAAC;AAED,SAASP,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}