{"ast":null,"code":"import { useUpdateEffect } from \"./chunk-5AOLTBA4.mjs\";\n\n// src/use-focus-on-hide.ts\nimport { contains, focus, getActiveElement, isTabbable } from \"@chakra-ui/utils\";\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (contains(el, activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const {\n    shouldFocus: shouldFocusProp,\n    visible,\n    focusRef\n  } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      focus(el, {\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nexport { useFocusOnHide };","map":{"version":3,"names":["useUpdateEffect","contains","focus","getActiveElement","isTabbable","preventReturnFocus","containerRef","el","current","activeElement","useFocusOnHide","options","shouldFocus","shouldFocusProp","visible","focusRef","nextTick"],"sources":["C:/Users/kushk_uzwykp1/OneDrive/Desktop/spotify_Node/MyFolder/fullRozarPay/frontened/node_modules/@chakra-ui/hooks/dist/chunk-H54GS5SN.mjs"],"sourcesContent":["import {\r\n  useUpdateEffect\r\n} from \"./chunk-5AOLTBA4.mjs\";\r\n\r\n// src/use-focus-on-hide.ts\r\nimport {\r\n  contains,\r\n  focus,\r\n  getActiveElement,\r\n  isTabbable\r\n} from \"@chakra-ui/utils\";\r\nfunction preventReturnFocus(containerRef) {\r\n  const el = containerRef.current;\r\n  if (!el)\r\n    return false;\r\n  const activeElement = getActiveElement(el);\r\n  if (!activeElement)\r\n    return false;\r\n  if (contains(el, activeElement))\r\n    return false;\r\n  if (isTabbable(activeElement))\r\n    return true;\r\n  return false;\r\n}\r\nfunction useFocusOnHide(containerRef, options) {\r\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options;\r\n  const shouldFocus = shouldFocusProp && !visible;\r\n  useUpdateEffect(() => {\r\n    if (!shouldFocus)\r\n      return;\r\n    if (preventReturnFocus(containerRef)) {\r\n      return;\r\n    }\r\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\r\n    if (el) {\r\n      focus(el, { nextTick: true });\r\n    }\r\n  }, [shouldFocus, containerRef, focusRef]);\r\n}\r\n\r\nexport {\r\n  useFocusOnHide\r\n};\r\n"],"mappings":"AAAA,SACEA,eAAe,QACV,sBAAsB;;AAE7B;AACA,SACEC,QAAQ,EACRC,KAAK,EACLC,gBAAgB,EAChBC,UAAU,QACL,kBAAkB;AACzB,SAASC,kBAAkBA,CAACC,YAAY,EAAE;EACxC,MAAMC,EAAE,GAAGD,YAAY,CAACE,OAAO;EAC/B,IAAI,CAACD,EAAE,EACL,OAAO,KAAK;EACd,MAAME,aAAa,GAAGN,gBAAgB,CAACI,EAAE,CAAC;EAC1C,IAAI,CAACE,aAAa,EAChB,OAAO,KAAK;EACd,IAAIR,QAAQ,CAACM,EAAE,EAAEE,aAAa,CAAC,EAC7B,OAAO,KAAK;EACd,IAAIL,UAAU,CAACK,aAAa,CAAC,EAC3B,OAAO,IAAI;EACb,OAAO,KAAK;AACd;AACA,SAASC,cAAcA,CAACJ,YAAY,EAAEK,OAAO,EAAE;EAC7C,MAAM;IAAEC,WAAW,EAAEC,eAAe;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGJ,OAAO;EACnE,MAAMC,WAAW,GAAGC,eAAe,IAAI,CAACC,OAAO;EAC/Cd,eAAe,CAAC,MAAM;IACpB,IAAI,CAACY,WAAW,EACd;IACF,IAAIP,kBAAkB,CAACC,YAAY,CAAC,EAAE;MACpC;IACF;IACA,MAAMC,EAAE,GAAG,CAACQ,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACP,OAAO,KAAKF,YAAY,CAACE,OAAO;IACjF,IAAID,EAAE,EAAE;MACNL,KAAK,CAACK,EAAE,EAAE;QAAES,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC/B;EACF,CAAC,EAAE,CAACJ,WAAW,EAAEN,YAAY,EAAES,QAAQ,CAAC,CAAC;AAC3C;AAEA,SACEL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}