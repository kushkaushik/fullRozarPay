{"ast":null,"code":"import { StackItem } from \"./chunk-AMDSPU3E.mjs\";\nimport { getDividerStyles, getStackStyles, selector } from \"./chunk-V4DIVZKN.mjs\";\n\n// src/stack/stack.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const styles = useMemo(() => getStackStyles({\n    direction,\n    spacing\n  }), [direction, spacing]);\n  const dividerStyle = useMemo(() => getDividerStyles({\n    spacing,\n    direction\n  }), [spacing, direction]);\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */jsx(StackItem, {\n        children: child\n      }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider) return _child;\n      const clonedDivider = cloneElement(divider, {\n        __css: dividerStyle\n      });\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */jsxs(Fragment, {\n        children: [_child, _divider]\n      }, key);\n    });\n  }, [divider, dividerStyle, hasDivider, shouldUseChildren, shouldWrapChildren, children]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: styles.flexDirection,\n    flexWrap: wrap,\n    className: _className,\n    __css: hasDivider ? {} : {\n      [selector]: styles[selector]\n    },\n    ...rest,\n    children: clones\n  });\n});\nStack.displayName = \"Stack\";\nexport { Stack };","map":{"version":3,"names":["StackItem","getDividerStyles","getStackStyles","selector","chakra","forwardRef","cx","getValidChildren","cloneElement","Fragment","useMemo","jsx","jsxs","Stack","props","ref","isInline","direction","directionProp","align","justify","spacing","wrap","children","divider","className","shouldWrapChildren","rest","styles","dividerStyle","hasDivider","shouldUseChildren","clones","validChildren","map","child","index","key","isLast","length","wrappedChild","_child","clonedDivider","__css","_divider","_className","div","display","alignItems","justifyContent","flexDirection","flexWrap","displayName"],"sources":["C:/Users/kushk_uzwykp1/OneDrive/Desktop/spotify_Node/MyFolder/fullRozarPay/frontened/node_modules/@chakra-ui/layout/dist/chunk-O5CRURSQ.mjs"],"sourcesContent":["import {\r\n  StackItem\r\n} from \"./chunk-AMDSPU3E.mjs\";\r\nimport {\r\n  getDividerStyles,\r\n  getStackStyles,\r\n  selector\r\n} from \"./chunk-V4DIVZKN.mjs\";\r\n\r\n// src/stack/stack.tsx\r\nimport {\r\n  chakra,\r\n  forwardRef\r\n} from \"@chakra-ui/system\";\r\nimport { cx } from \"@chakra-ui/shared-utils\";\r\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\r\nimport { cloneElement, Fragment, useMemo } from \"react\";\r\nimport { jsx, jsxs } from \"react/jsx-runtime\";\r\nvar Stack = forwardRef((props, ref) => {\r\n  const {\r\n    isInline,\r\n    direction: directionProp,\r\n    align,\r\n    justify,\r\n    spacing = \"0.5rem\",\r\n    wrap,\r\n    children,\r\n    divider,\r\n    className,\r\n    shouldWrapChildren,\r\n    ...rest\r\n  } = props;\r\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\r\n  const styles = useMemo(\r\n    () => getStackStyles({ direction, spacing }),\r\n    [direction, spacing]\r\n  );\r\n  const dividerStyle = useMemo(\r\n    () => getDividerStyles({ spacing, direction }),\r\n    [spacing, direction]\r\n  );\r\n  const hasDivider = !!divider;\r\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\r\n  const clones = useMemo(() => {\r\n    const validChildren = getValidChildren(children);\r\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\r\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\r\n      const isLast = index + 1 === validChildren.length;\r\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\r\n      const _child = shouldWrapChildren ? wrappedChild : child;\r\n      if (!hasDivider)\r\n        return _child;\r\n      const clonedDivider = cloneElement(\r\n        divider,\r\n        {\r\n          __css: dividerStyle\r\n        }\r\n      );\r\n      const _divider = isLast ? null : clonedDivider;\r\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\r\n        _child,\r\n        _divider\r\n      ] }, key);\r\n    });\r\n  }, [\r\n    divider,\r\n    dividerStyle,\r\n    hasDivider,\r\n    shouldUseChildren,\r\n    shouldWrapChildren,\r\n    children\r\n  ]);\r\n  const _className = cx(\"chakra-stack\", className);\r\n  return /* @__PURE__ */ jsx(\r\n    chakra.div,\r\n    {\r\n      ref,\r\n      display: \"flex\",\r\n      alignItems: align,\r\n      justifyContent: justify,\r\n      flexDirection: styles.flexDirection,\r\n      flexWrap: wrap,\r\n      className: _className,\r\n      __css: hasDivider ? {} : { [selector]: styles[selector] },\r\n      ...rest,\r\n      children: clones\r\n    }\r\n  );\r\n});\r\nStack.displayName = \"Stack\";\r\n\r\nexport {\r\n  Stack\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}